#all commands that do anything need to have a
#--noop that doesn't call the actual action commands, and a way to
#show the user what it's about to do, probably as an integer to the
#command function - 0 = go, 1 = get information to show user, 2 = pretend to go
#1 and 2 may be similar enough to just drop to a boolean 'doanything'
#anyway they must return what they will clean/install/do/etc 
#so that the interface can display to the user what is about to happen, before
#the user confirms that this is what they want to happen
#so that if it's going to install virus 2.0, the user will see this and be able to hit cancel
#possibly some exemptions could be made such as the addrepo command probably doesn't need a confirm 

#package comparer should ignore version if comparison is missing

#minecraft is treated like a package - when there is an upgrade available on manager launch, the version file is updated, and upgrade is offered.
#the package manager then loads up the minecraft version from the jars.

mcpkg #with no arguments, aka a doubleclick on the jar, launches the gui

  #searches package names and descriptions for <string>
  #multiple arguments are merged into one string - "mcpkg search mod loader" searches for "mod loader"
mcpkg search <string> [--section=X] [--author=X] #command - missing filters #cli
  #add and cache repo
mcpkg addrepo <mainrepourl> #command #cli

  #delete repo, do not uncache
mcpkg delrepo <repo #/url> #command #cli


  #shows list of repos in repo file, including number in in repo file
mcpkg list repos #command #cli


  #list sections
mcpkg list sections #command #cli
  #list all modders and their contacts - this is why you put something in the contact that can withstand spam!
mcpkg list authors 
  #list of ALL packages and their short descriptions
mcpkg list packages #command #cli
#list all cached packages.
mcpkg list cached
  #show packages that are queued for install next time minecraft is started
mcpkg list queue #command #cli
  #show packages that are currently installed
mcpkg list installed


  #dump packageinfo for package, plus whether the package is queued and whether the package is installed
mcpkg show <packagename> #command, Package has no installed and queued field yet #cli

  #show packages that can be upgraded, and whether minecraft can be upgraded
mcpkg list upgrades

  #clear the repo cache
mcpkg clean repos #command #cli

mcpkg clean packages
  #clear any old (out of date) cached package files - would be run automatically 
mcpkg clean oldpackages
  #clear all cached everything
mcpkg clean



  #queues package named to be installed next run. if it is not found in the repo, it is searched for as a file.
#if found as a file, it is copied to package cache before being added.
mcpkg queue <name/filename> #command #cli

  #remove package <name> from queue to install (effectively uninstalling it)
mcpkg unqueue <name>

  #run actual install - if --offline is provided run minecraft jar directly, without the launcher, and if --nostart is provided, do not launch minecraft.
  #checks minecraft update system to see if a new version is out, 
  #if .minecraft contains an unmodded minecraft that is newer than the latest backup, backs it up.
  #then builds a new modded minecraft based on queued packages and latest backup.
mcpkg run [--offline|--nostart]

  

  #show order of packages to be installed, including number in order
  #order commands will not be added for a few releases; it will be completely up to the solver.
mcpkg order

#move 
mcpkg order <order number> (up|down)

mcpkg order swap <order number> <order number>

#not planned what the format will be that this takes as input
mcpkg create <inputzip/inputdir> <outputzip>

#should also be able to use the patcher directly

#should have repository index creation commands, for modders
#but can only be used from command line, or from a special prompt 
#that allows commands to be entered in the gui that are then processed as commandline thingys


  #list backups made

  #create a backup - main means everything but saves
  #to add later - manual for now
  #later does not mean after release
#mcpkg backup list
#mcpkg backup create (all|saves|main)
#mcpkg backup restore [saves|main] 