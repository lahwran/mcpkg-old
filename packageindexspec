#package repository index spec.
#blank lines are ignored. if a line starts with # it is a comment. to allow comments in names,
#comments must be on their own lines.

#format is:
#Key: Value

#some keys attach to blocks. 
#in the blocks, a key will end the block, even if the key is invalid. 
#keys may not contain spaces, and if there is a space in a line before a ': ', then it
#will not be considered a key.
#also, the special key Block is prepended to lines that are not ignored and have no key.
#to force a line to be part of a block, give it the key Block:
#for instance:
#Description: example description
#Block: more description
#Block: even more description


#following field is highly recommended to be first field in file
#if the cached index version differs, then the whole file will be redownloaded and reloaded
#if it does not, then the download will stop
#therefore it is recommended to put this as early in the file as possible
#if it is not included, file is always downloaded and parsed as though it had changed
#IndexVersion being missing from cache also forces a redownload
IndexVersion: <arbitrary string>

#name - Package names must consist only of lower case letters (a-z), digits (0-9), plus (+) and minus (-) signs, and periods (.). They must be at least two characters long and must start with an alphanumeric character.
#when the name conflicts with the name from another repo, it is prefixed with the repository owner name. if it still conflicts, then the version is added. if it still conflicts, the user is alerted.
Package: <PackageName>

#Contact should be either an email or a url (such as an irc url) where modder can be contacted
#can specify multiple Author lines when the package is a collaboration
Author: Modder<Contact>

#optional
Homepage: <URL>

#Section to file this package under. may only be a section name declared in a repository list which has the permission to do so.
Section: <A Name Goes Here>

#----------------------------------------
#version-specific information


#MCVersion 
#url must be direct - mediafire, for example, cannot be used for this. dropbox+bit.ly, however, can.
Version: <MCVersion> <PackageVersion> <PackageURL>
#all subfields are optional - if not included, assumed to be blank.

#mutually exclusive with other Changelog fields
SingleChangelog: <changelog summary>
<optional multi-line changelong>

#mutually exclusive with other Changelog fields
SingleChangelogUrl: <url to changelog text file>

#changelog fields that allow to show changes from X version to latest will be added soon, hopefully before release

#these two are just metadata, however are required if this package uses static block/item IDs.
#dynamic block/item IDs are not recommended.
ItemIDs: <IDList>
BlockIDs:

#<IDList> format:
a,b,c,d...
#example:
1,3,18,84


#dependency cycles: be careful what you put in these fields. if a dependency cycle is detected, the mod install will abort!
#I will be writing a checker function that downloads the lists and checks for loops.


#absolute dependency, package will not be installed if any depends package installs failed
#if omitted, assumes no depends
Depends: <PackageList>

#if included, specifies packages that this package must be installed before, if those are being installed
InstallBefore: <PackageList>

#if included, specifies packages that this package must be installed after, if those are being installed
InstallAfter: <PackageList>

#This declares a strong, but not absolute, dependency.
#"The Recommends field should list packages that would be found together with this one in all but unusual installations."
Recommends: <PackageList>

# like Recommends and Depends, but will never be installed automatically
#"This is used to declare that one package may be more useful with one or more others. 
# Using this field tells the packaging system and the user that the listed packages are
# related to this one and can perhaps enhance its usefulness, but that installing 
# this one without them is perfectly reasonable."
Suggests: <PackageList>

#"This field is similar to Suggests but works in the opposite direction.
# It is used to declare that a package can enhance the functionality of another package."
Enhances: <PackageList>

#refuse to activate this package to install if a package on this list is activated.
#only for when there is a known incompatibility with a mod that doesn't change the same class files
#normally, hard conflicts will refuse to install when their files conflict, in which case
#use of this field is unneeded.
Conflicts: <PackageList>

#package dependencies that this package provides - 
Provides: <PackageList>





#PackageList format:
<Package1>, <Package2>, <PackageN>

#PackageN format:
<PackageName>[comparison]<Package Version>
#will assume the MC Version Comparison used on your mod

#Version Comparison format:
== package version equals
!= package version does not equal
>= package version is at least
<= package version is at most
>> package version is above
<< package version is below


#versions are compared as specified by the debian version comparison algorithm:
# http://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-Version


#will not automatically upgrade to latest version when version in repo is newer - instead, will offer to upgrade


#end of version-specific information
#----------------------------------------

Description: <single line synopsis>
<extended description over several lines>



#repository block - ends previous section, starts a repository section
Repository: TLUL's Mods
Owner: <Modder Nick>!<Email>
Index: <UrlToIndex>
#specifies whether to use Repository: blocks in this repo. set to false for user repos. 
#forced to false if this repo does not have this permission.
FollowSubrepos: <boolean>
#specifies whether to use Sections: declarations in this repo. 
#forced to false if this repo does not have this permission.
AddSections: <boolean>
Description: <single line synopsis>
<extended description over several lines>


#sections - list of sections this repo adds. 
Sections: Mobs,Items,


#################
##example index##
#################

Package: GuiAPI
Author: lahwran<irc://irc.esper.net/lahwran>
Section: libraries

Version: 1.2_02 0.9.5 [directurl]
Depends: Modloader:1.2<=x<1.3/>=^

Description: API for modders to add Settings and Advanced GUIs
allows modders to easily specify settings to save to file,
as well as a way to do advanced guis using the TWL java widget library.


Package: IngameInvedit
Author: lahwran!blendmaster1024@gmail.com
Section: Cheats/Testing tools

Version: 1.2_02 . [directurl]

Description: ingame inventory editor that shows list of items down the side.
features detection of mod-added blocks.


Repository: TLUL's Mods
Owner: TLUL
Index: [urlhere]
FollowSubrepos: true
Description: TLUL's Mod Repository
